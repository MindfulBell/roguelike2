{"version":3,"sources":["webpack:///./src/client/app/components/layout.js?d781"],"names":[],"mappings":"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","file":"0.4bfa5dc0bdfd82097049.hot-update.js","sourcesContent":["import React, {Component} from 'react';\nimport Cell from './cell.js';\nimport { connect } from 'react-redux';\nimport { moveHero, removeItem, pickupPotion, pickupWeapon, hitEnemy, dmgHero, gainXP, levelUp, newLevel, newPosition, resetHero } from '../actions/index.js';\nimport { bindActionCreators } from 'redux';\nimport { randomInclusive } from '../utils/index.js'\n\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerDead: false,\n      bossDead: false,\n      seeAll: false,\n      levelUp: false\n    };\n    this.handleKey = this.handleKey.bind(this);\n    this.findNeighbors = this.findNeighbors.bind(this);\n    this.getMovedTo = this.getMovedTo.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleRestart = this.handleRestart.bind(this);\n    this.animateLvl = this.animateLvl.bind(this);\n  }\n    componentWillMount(){\n      this.props.newLevel();\n    }\n    componentDidMount(){      \n      window.addEventListener('keydown', this.handleKey);\n    }\n    componentWillUnmount(){\n      window.removeEventListener('keydown', this.handleKey);\n    }\n\n\n    //mapping a new array of neighbors, top, left, bot, right and giving them a new prop based on direction\n    findNeighbors(){\n      let heroPos = this.props.hero.position;\n      let layout = this.props.layout;\n      //flatten to 1d array for filtering to get small array for 4 neighbors\n      let neighbors = []; \n      for (let i=0; i<layout.length; i++) {\n        neighbors.push(...layout[i])\n      }\n      return neighbors.map((cell)=>{\n        let xCoord = cell.position[0];\n        let yCoord = cell.position[1];\n          if (xCoord === heroPos[0] && yCoord === heroPos[1]-1) {\n            return Object.assign({}, cell, {top: true})\n          }\n          else if (xCoord === heroPos[0]-1 && yCoord === heroPos[1]) {\n            return Object.assign({}, cell, {left: true})\n          }\n          else if (xCoord === heroPos[0] && yCoord === heroPos[1]+1) {\n            return Object.assign({}, cell, {bot: true})\n          }\n          else if (xCoord === heroPos[0]+1 && yCoord === heroPos[1]) {\n            return Object.assign({}, cell, {right: true})\n          }\n          else {\n            return cell;\n          }\n        }).filter((cell)=>{\n          return cell.top || cell.left || cell.right || cell.bot;\n        })\n    }\n    \n    getMovedTo(neighbors, pos){\n      for (let i=0; i<neighbors.length; i++) {\n        for (let prop in neighbors[i]){\n          let X = neighbors[i][prop][0];\n          let Y = neighbors[i][prop][1];\n          if (X === pos[0] && Y === pos[1]) {\n            return neighbors[i];\n          }\n        }\n      }\n    }\n    \n    handleClick(){\n      this.setState({seeAll: !this.state.seeAll});\n    }\n    \n    handleRestart(){\n      this.setState({playerDead: false, bossDead: false});\n      this.props.newLevel(1);\n      this.props.resetHero();\n    }\n\n    handleKey(e){\n      e.preventDefault();\n      if (!this.state.playerDead && !this.state.bossDead) {\n        let heroPos = this.props.hero.position;\n        let neighbors = this.findNeighbors();\n        \n        \n        // MOVEMENT\n        // Get the x,y of the space we are moving to\n        let move = [];\n        switch (e.keyCode) {\n          case 37:\n            //left\n            move = [heroPos[0]-1, heroPos[1]]\n            break;\n          case 38:\n            //top\n            move = [heroPos[0], heroPos[1]-1]\n            break;\n          case 39:\n            //right\n            move = [heroPos[0]+1, heroPos[1]]\n            break;\n          case 40:\n            //bot\n            move = [heroPos[0], heroPos[1]+1]\n            break;\n          default: \n            move = [heroPos[0], heroPos[1]];\n            break;\n        }\n        \n        // get the cell object you are moving to\n        let movingTo = this.getMovedTo(neighbors, move)\n\n        //based on what it is, do various things\n        if (movingTo !== undefined) {\n          if (!movingTo.wall && !movingTo.enemy) {\n            this.props.moveHero(move)\n            if (movingTo.potion){\n              let hp = this.props.hero.hp + movingTo.potion;\n              this.props.removeItem(move); \n              this.props.healHero(hp); \n            }\n            else if (movingTo.weapon){ \n              this.props.removeItem(move) \n              this.props.getWeaponHero(movingTo.weapon);\n            }\n            else if (movingTo.stairs){ \n              switch (movingTo.currentStage) {\n\n                case 1:\n                  this.props.newLevel(2)\n                  break;\n                case 2:\n                  this.props.newLevel(3)\n                  break;\n                case 3: \n                  this.props.newLevel(4)\n                  break;\n                default:\n                  this.props.newLevel(1)\n                  break;          \n              }\n              this.props.newPosition();\n            }\n          }\n          else if (movingTo.enemy) {\n            //HERO STATS\n\n            //hero attack is level + att of weapon\n            let hero = this.props.hero;\n            let heroAttack = hero.level + hero.weapon.att;\n            let heroHP = this.props.hero.hp;\n            let heroXP = this.props.hero.xp;\n            let heroLvl = this.props.hero.level;\n\n            // ENEMY STATS\n            let enemy = movingTo.enemy;\n            let enemyHP = enemy.hp;\n            let enemyXP = enemy.xp;\n            \n            //ATTACK ENEMY\n            enemyHP -= heroAttack;\n            this.props.hitEnemy(move, enemy, enemyHP);\n\n\n            //ATTACK HERO\n            // enemy attack is based off level\n            let enemyAttack = 0;  \n            switch (movingTo.enemy.lvl){\n              case 1:\n                enemyAttack = randomInclusive(4,6);\n                break;\n              case 2: \n                enemyAttack = randomInclusive(8,10);\n                break;\n              case 3:\n                enemyAttack = randomInclusive(12,14);\n                break;\n              case 4: \n                enemyAttack = randomInclusive(16,18);\n                break;\n              case 5: \n                enemyAttack = randomInclusive(22,26);\n                break;\n            }           \n            heroHP -= enemyAttack;\n            this.props.dmgHero(heroHP);\n            \n            // CHECK IF KILLED/HERO DEAD/XP BOOST\n            if (enemyHP <= 0 && heroHP > 0) {\n              //not dead and killed enemy, get xp\n              let totalXP = heroXP + enemyXP;\n              this.props.gainXP(totalXP)\n              \n\n              // CHECK LEVEL UP?\n              // hitpoint boost on level up\n              let levelupHP = heroHP + 50\n                          \n              //XP Thresholds: 35, 85, 120\n              if (totalXP >= 35 && totalXP < 85 && heroLvl === 1) {\n                this.props.levelUp(2, levelupHP)\n                this.setState({levelUp: true})\n                this.animateLvl();\n              }\n              if (totalXP >= 85 && totalXP < 120 && heroLvl === 2){this.props.levelUp(3, levelupHP)}\n              if (totalXP >= 120 && heroLvl === 3){this.props.levelUp(4, levelupHP)}\n              if (movingTo.boss) {\n                this.setState({bossDead: true})\n              }\n            }\n            else if (heroHP <= 0) {\n              //set local state as a flag 'hero dead' to add some div message\n              this.setState({playerDead: true})\n            }            \n          }\n        }\n      }\n\n    }\n\n  render() {\n\n    let xpStatus = 0;\n    let heroXP = this.props.hero.xp\n    switch (this.props.hero.level) {\n      case 1:\n      xpStatus = `${heroXP} / 35`\n      break;\n      case 2:\n      xpStatus = `${heroXP} / 85`\n      break;\n      case 3:\n      xpStatus = `${heroXP} / 120`\n      break;\n      default: \n      xpStatus = 'MAX'\n    }\n    \n    let cells = this.props.layout.map((row, rowNum)=>{\n      return row.map((cell,cellNum)=>{\n        let heroPos = this.props.hero.position;\n        // if within hero sight radius\n        if (!this.state.seeAll && ((cellNum <= heroPos[0]-5 || cellNum >= heroPos[0]+5) || (rowNum <= heroPos[1]-5 || rowNum >= heroPos[1]+5))){\n          return <Cell key={cellNum+rowNum} hidden={true} />\n        }\n        // if hero\n        else if (rowNum === heroPos[1] && cellNum === heroPos[0]) {\n          return <Cell key={cellNum+rowNum} hero={true} /> \n        }\n        // if potion\n        else if (cell.potion !== false) {\n          return <Cell key={cellNum+rowNum} potion={true} />\n        }\n        // if weapon\n        else if (cell.weapon !== false) {\n          return <Cell key={cellNum+rowNum} weapon={true} />            \n        }\n        // if boss\n        else if (cell.boss !== false) {\n          return <Cell key={cellNum+rowNum} boss={true} />\n        }\n        // if enemy\n        else if (cell.enemy !== false) {\n          return <Cell key={cellNum+rowNum} enemy={true} />            \n        }\n        // if stairs\n        else if (cell.stairs) {\n          return <Cell key={cellNum+rowNum} stairs={true} />            \n        }\n        else if (!cell.wall) {\n          return <Cell key={cellNum+rowNum} room={true} />            \n        }        \n        else {\n          return <Cell key={cellNum+rowNum} wall={true} />\n        }\n      })\n    })\n    \n    let deadMessage = this.state.playerDead ? 'YOU DIED!!' : false;\n    let winMessage = this.state.bossDead ? 'YOU WON!!' : false;\n    \n    let messageDiv = (\n      <div \n      className='messageDiv' \n      style={(this.state.playerDead || this.state.bossDead) ? {opacity: 1} : {opacity: 0}}>\n      <h4>{deadMessage || winMessage}</h4>\n        <div className='refresh-button' \n        style={{margin: '0 auto'}} \n        onClick={this.handleRestart}>\n          <i className=\"fa fa-2x fa-refresh\" aria-hidden=\"true\"></i>\n        </div>\n      </div>\n    )\n\n    return (\n      <div>\n        <div className='stats-and-key'>\n          <div className='player-stats' style={{backgroundColor: 'white'}}>\n            <h2>Hero Stats</h2>\n            <h4><span className = 'stat-name'>Level</span>: {this.props.hero.level}</h4>          \n            <h4><span className = 'stat-name'>Health</span>: {this.props.hero.hp}</h4>\n            <h4><span className = 'stat-name'>Weapon</span>: {this.props.hero.weapon.name}</h4>\n            <h4><span className = 'stat-name'>Experience</span>: {xpStatus} </h4>\n          </div>\n          <div className='key' style={{backgroundColor: 'white'}}>\n            <h2 style={{textAlign: 'center'}}>Key</h2>\n            <div><div className = 'key-cell' style={{backgroundColor: 'green'}}></div> = Potion </div> \n            <div><div className = 'key-cell' style={{backgroundColor: 'orange'}}></div> = Weapon </div>         \n            <div><div className = 'key-cell' style={{backgroundColor: 'red'}}></div> = Enemy </div>\n            <div><div className = 'key-cell' style={{backgroundColor: 'yellow'}}></div> = Boss </div>\n            <div><div className = 'key-cell' style={{backgroundColor: 'purple'}}></div> = Stairs </div>\n          </div>\n        </div>\n        <div className='see-all'>\n          <div className='see-button' style={{margin: '0 auto'}} onClick={this.handleClick}><i className=\"fa fa-2x fa-lightbulb-o\" aria-hidden=\"true\"></i></div>\n        </div>\n        <div className='board-holder'>\n          {messageDiv}\n          <div className='board'>            \n            {cells}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\nconst mapStateToProps = (state) => {\n  return { \n    layout: state.layout,\n    hero: state.hero\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    moveHero: (newPos) => {dispatch(moveHero(newPos))},\n    removeItem: (position) => {dispatch(removeItem(position))},\n    healHero: (amt) => {dispatch(pickupPotion(amt))},\n    getWeaponHero: (weapon) => {dispatch(pickupWeapon(weapon))},\n    hitEnemy: (position, ene, hp) => {dispatch(hitEnemy(position, ene, hp))},\n    dmgHero: (hp) => {dispatch(dmgHero(hp))},\n    gainXP: (xp) => {dispatch(gainXP(xp))},\n    levelUp: (lvl, hp) => {dispatch(levelUp(lvl, hp))},\n    newLevel: (num) => {dispatch(newLevel(num))},\n    newPosition: () => {dispatch(newPosition())},\n    resetHero: () =>{dispatch(resetHero())}\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Layout)\n\n\n/** WEBPACK FOOTER **\n ** ./src/client/app/components/layout.js\n **/"],"sourceRoot":""}