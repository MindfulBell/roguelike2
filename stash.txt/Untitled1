function randomInclusive(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}

else if (cell.room) {
          return (
            <Cell key={cellNum+rowNum}
            position={[rowNum, cellNum]}
            room={true}
            neighbors={neighbors}/>
            )
        }
        
        //build rooms: small square, big square, small rectangle, big rectangle
//go over certain elements in the board array and change their room property to true

// [[0,0],[1,0],[2,0],[3,0],
//  [0,1],[1,1],[2,1],[3,1],
//  [0,2],[1,2],[2,2],[3,2],
//  [0,3],[1,3],[2,3],[3,3],
//  [0,4],[1,4],[2,4],[3,4],
//  [0,5],[1,5],[2,5],[3,5]]
function addRooms(board, width, height){
  
  let xStart = randomInclusive(0,20);
  let yStart = randomInclusive(0,20);
  let xEnd = xStart + width;
  let yEnd = yStart + height;
  
  return board.map((row)=>{
    return row.map((cell)=>{
      let cellX = cell.position[0];
      let cellY = cell.position[1];
      if ((cellX >= xStart && cellX <= xEnd) && (cellY >= yStart && cellY <= yEnd)) {
        // return modified object, how to modify?
        let room = true;
        return Object.assign({}, cell, {room})
      }
      else {
        return cell;
      }
    })
  })

  //x size var
  //y size var
  //just make a range for the x, and a range for the y
  //go through entire board, for each: if (x coord > n and < m and y coord > a and < b)...
}



        else if (this.props.room) {
            style = {backgroundColor: 'white'}
        }